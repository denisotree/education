# coding utf-8

# Задание-1:
# Напишите функцию, округляющую полученное произвольное десятичное число
# до кол-ва знаков (кол-во знаков передается вторым аргументом).
# Округление должно происходить по математическим правилам (0.6 --> 1, 0.4 --> 0).
# Для решения задачи не используйте встроенные функции и функции из модуля math.


def my_round(number, ndigits):
    #  Вводим переменную, хранящую цифры до указанного знака после запятой.
    temp = number * (10 ** ndigits)
    #  В другую переменную заводим остаток цифр
    rem = temp % 1
    #  Если остаток больше или равен 0.5, прибавляем к промежуточной переменной единицу
    if rem >= 0.5:
        temp += 1
    number = (temp - rem) / 10 ** ndigits
    #  Возвращаем номер, получив его обратным переносом запятой
    return number


def round_init():
    num = input('Введите число: ')
    nd = input('До скольки знаков округлить число? ')
    try:
        return my_round(float(num), int(nd))
    except ValueError:
        return 'Введены неверные значения'

# Задание-2:
# Дан шестизначный номер билета. Определить, является ли билет счастливым.
# Решение реализовать в виде функции.
# Билет считается счастливым, если сумма его первых и последних цифр равны.
# !!!P.S.: функция не должна НИЧЕГО print'ить


def lucky_ticket(ticket_number):
    try:
        #  Проверяем, являются ли входные данные числом
        ticket_number = int(ticket_number)
        #  Проверяем, содержит ли номер билета 6 символов
        if len(str(ticket_number)) == 6:
            #  Разделяем полученные данные оператором среза пополам и приводим к спискам целых чисел
            left_prt = list(str(ticket_number)[:3])
            left_prt = [int(item) for item in left_prt]
            right_prt = list(str(ticket_number)[3:])
            right_prt = [int(item) for item in right_prt]
            #  Находим сумму списков
            left_sum = sum(left_prt)
            right_sum = sum(right_prt)
            # Записываем результат проверки в переменную
            answer = 'Счастливый билет' if left_sum == right_sum else 'Самый обычный билет'
        else:
            #  Иначе выводим ошибку
            answer = 'Неверный номер билета'
    except ValueError:
        answer = 'Неверный номер билета'
    return answer


def lucky_ticket_init():
    num = input('Введите 6-ти значный номер билета: ')
    return lucky_ticket(num)


######################################################################################################
#  Интерфейс
######################################################################################################

while True:
    print(
         'Программа умеет:\n'
         '[1] Округлять число до n знаков после запятой\n'
         '[2] Узнавать, счастливый ли билет\n')
    answer = input('Введите номер функции или нажмите [q] для выхода из программы: ')
    if answer == 'q':
        break
    elif not answer.isdigit():
        print('Вы ввели неверную команду')
    elif int(answer) == 1:
        print(round_init())
    elif int(answer) == 2:
        print(lucky_ticket_init())
    else:
        pass
